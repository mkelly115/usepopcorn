{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst KEY = process.env.REACT_APP_IMDB_API_KEY;\nexport function useMovies(query) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const controller = new AbortController();\n    async function fetchMovies() {\n      try {\n        setIsLoading(true);\n        setError(\"\");\n        const res = await fetch(`https://www.omdbapi.com/?apikey=${KEY}&s=${query}`, {\n          signal: controller.signal\n        });\n        if (!res.ok) throw new Error(\"Something went wrong with fetching movies :(\");\n        const data = await res.json();\n        if (data.Response === \"false\") throw new Error(\"Movie not found\");\n        setMovies(data.Search || []);\n        setError(\"\");\n      } catch (err) {\n        console.error(err.message);\n        if (error.name !== \"AbortError\") {\n          setError(err.message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    if (query.length < 3) {\n      setMovies([]);\n      setError(\"\");\n      return;\n    }\n\n    // handleCloseMovie();\n    fetchMovies();\n    return function () {\n      controller.abort();\n    };\n  }, [query]);\n  return {\n    movies,\n    isLoading,\n    error\n  };\n}\n_s(useMovies, \"U+znDQTK7eje4cwlxt5gS2qHcHc=\");","map":{"version":3,"names":["useState","useEffect","KEY","process","env","REACT_APP_IMDB_API_KEY","useMovies","query","_s","movies","setMovies","isLoading","setIsLoading","error","setError","controller","AbortController","fetchMovies","res","fetch","signal","ok","Error","data","json","Response","Search","err","console","message","name","length","abort"],"sources":["C:/Users/mkell/bootcamp/usepopcorn/src/useMovies.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst KEY = process.env.REACT_APP_IMDB_API_KEY;\r\n\r\nexport function useMovies(query) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n\r\n    async function fetchMovies() {\r\n      try {\r\n        setIsLoading(true);\r\n        setError(\"\");\r\n        const res = await fetch(\r\n          `https://www.omdbapi.com/?apikey=${KEY}&s=${query}`,\r\n          { signal: controller.signal }\r\n        );\r\n\r\n        if (!res.ok)\r\n          throw new Error(\"Something went wrong with fetching movies :(\");\r\n\r\n        const data = await res.json();\r\n        if (data.Response === \"false\") throw new Error(\"Movie not found\");\r\n        setMovies(data.Search || []);\r\n        setError(\"\");\r\n      } catch (err) {\r\n        console.error(err.message);\r\n\r\n        if (error.name !== \"AbortError\") {\r\n          setError(err.message);\r\n        }\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    if (query.length < 3) {\r\n      setMovies([]);\r\n      setError(\"\");\r\n      return;\r\n    }\r\n\r\n    // handleCloseMovie();\r\n    fetchMovies();\r\n\r\n    return function () {\r\n      controller.abort();\r\n    };\r\n  }, [query]\r\n);\r\n\r\n    return {movies, isLoading, error}\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAE9C,OAAO,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;IAExC,eAAeC,WAAWA,CAAA,EAAG;MAC3B,IAAI;QACFL,YAAY,CAAC,IAAI,CAAC;QAClBE,QAAQ,CAAC,EAAE,CAAC;QACZ,MAAMI,GAAG,GAAG,MAAMC,KAAK,CACrB,mCAAmCjB,GAAG,MAAMK,KAAK,EAAE,EACnD;UAAEa,MAAM,EAAEL,UAAU,CAACK;QAAO,CAC9B,CAAC;QAED,IAAI,CAACF,GAAG,CAACG,EAAE,EACT,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;QAEjE,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;QAC7B,IAAID,IAAI,CAACE,QAAQ,KAAK,OAAO,EAAE,MAAM,IAAIH,KAAK,CAAC,iBAAiB,CAAC;QACjEZ,SAAS,CAACa,IAAI,CAACG,MAAM,IAAI,EAAE,CAAC;QAC5BZ,QAAQ,CAAC,EAAE,CAAC;MACd,CAAC,CAAC,OAAOa,GAAG,EAAE;QACZC,OAAO,CAACf,KAAK,CAACc,GAAG,CAACE,OAAO,CAAC;QAE1B,IAAIhB,KAAK,CAACiB,IAAI,KAAK,YAAY,EAAE;UAC/BhB,QAAQ,CAACa,GAAG,CAACE,OAAO,CAAC;QACvB;MACF,CAAC,SAAS;QACRjB,YAAY,CAAC,KAAK,CAAC;MACrB;IACF;IAEA,IAAIL,KAAK,CAACwB,MAAM,GAAG,CAAC,EAAE;MACpBrB,SAAS,CAAC,EAAE,CAAC;MACbI,QAAQ,CAAC,EAAE,CAAC;MACZ;IACF;;IAEA;IACAG,WAAW,CAAC,CAAC;IAEb,OAAO,YAAY;MACjBF,UAAU,CAACiB,KAAK,CAAC,CAAC;IACpB,CAAC;EACH,CAAC,EAAE,CAACzB,KAAK,CACX,CAAC;EAEG,OAAO;IAACE,MAAM;IAAEE,SAAS;IAAEE;EAAK,CAAC;AACrC;AAACL,EAAA,CAnDeF,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}